<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjoinedNotFlagError" xml:space="preserve">
    <value>Sousedící alias není příznak.</value>
  </data>
  <data name="AdjoinedNotFoundError" xml:space="preserve">
    <value>Nenašel se sousedící alias typu příznak.</value>
  </data>
  <data name="AvailableArguements" xml:space="preserve">
    <value>K dispozici jsou následující argumenty:</value>
  </data>
  <data name="AvailableCommands" xml:space="preserve">
    <value>K dispozici jsou následující příkazy:</value>
    <comment>Commands the tool supports</comment>
  </data>
  <data name="AvailableOptions" xml:space="preserve">
    <value>K dispozici jsou následující možnosti:</value>
  </data>
  <data name="AvailableSubcommands" xml:space="preserve">
    <value>K dispozici jsou následující dílčí příkazy:</value>
    <comment>Nested commands that can be run in context of the selected command</comment>
  </data>
  <data name="ChannelArgumentDescription" xml:space="preserve">
    <value>Použít konkrétní kanál (výchozí je obecné publikum)</value>
  </data>
  <data name="CommandArgumentDescription" xml:space="preserve">
    <value>Filtrovat výsledky podle příkazu</value>
  </data>
  <data name="CountArgumentDescription" xml:space="preserve">
    <value>Nezobrazovat víc než zadaný počet výsledků</value>
  </data>
  <data name="ExactArgumentDescription" xml:space="preserve">
    <value>Najít aplikace podle přesné shody</value>
  </data>
  <data name="ExtraPositionalError" xml:space="preserve">
    <value>Našel se poziční argument, i když nebyl očekáván.</value>
  </data>
  <data name="FileArgumentDescription" xml:space="preserve">
    <value>Soubor připravený na hash</value>
  </data>
  <data name="FlagContainAdjoinedError" xml:space="preserve">
    <value>Argument příznaku nemůže obsahovat sousedící hodnotu.</value>
  </data>
  <data name="ForceArgumentDescription" xml:space="preserve">
    <value>Provést příkaz bez vyzvání</value>
  </data>
  <data name="HashHelperDescription" xml:space="preserve">
    <value>Pomocník pro instalační soubory</value>
  </data>
  <data name="HelpArgumentDescription" xml:space="preserve">
    <value>Zobrazí nápovědu k vybranému příkazu</value>
  </data>
  <data name="HelpForDetails" xml:space="preserve">
    <value>Pokud chcete získat podrobnosti o konkrétním příkazu, předejte ho do argumentu help.</value>
  </data>
  <data name="HelpLinkPreamble" xml:space="preserve">
    <value>Další nápovědu najdete tady:</value>
  </data>
  <data name="IdArgumentDescription" xml:space="preserve">
    <value>Filtrovat výsledky podle ID</value>
  </data>
  <data name="InstallCommandDescription" xml:space="preserve">
    <value>Nainstaluje danou aplikaci</value>
  </data>
  <data name="InteractiveArgumentDescription" xml:space="preserve">
    <value>Vyžádat interaktivní instalaci (možná bude potřeba zásah uživatele)</value>
  </data>
  <data name="InvalidAliasError" xml:space="preserve">
    <value>Nebyl rozpoznán alias argumentu pro aktuální příkaz.</value>
  </data>
  <data name="InvalidArgumentSpecifierError" xml:space="preserve">
    <value>Neplatný specifikátor argumentu</value>
  </data>
  <data name="InvalidNameError" xml:space="preserve">
    <value>Nebyl rozpoznán název argumentu pro aktuální příkaz.</value>
  </data>
  <data name="LanguageArgumentDescription" xml:space="preserve">
    <value>Jazyk instalace (pokud se podporuje)</value>
  </data>
  <data name="LocationArgumentDescription" xml:space="preserve">
    <value>Umístění k instalaci (pokud se podporuje)</value>
  </data>
  <data name="LogArgumentDesciption" xml:space="preserve">
    <value>Umístění protokolu (pokud se podporuje)</value>
  </data>
  <data name="ManifestArgumentDescription" xml:space="preserve">
    <value>Cesta k manifestu aplikace</value>
  </data>
  <data name="MissingArgumentError" xml:space="preserve">
    <value>Byla požadována hodnota argumentu, ale žádná se nenašla.</value>
  </data>
  <data name="MonikerArgumentDescription" xml:space="preserve">
    <value>Filtrovat výsledky podle cesty odkazu aplikace</value>
  </data>
  <data name="MsixArgumentDescription" xml:space="preserve">
    <value>Se vstupním souborem se bude zacházet jako se souborem msix a pokud bude podepsaný, poskytne se hodnota hash</value>
  </data>
  <data name="NameArgumentDescription" xml:space="preserve">
    <value>Filtrovat výsledky podle názvu</value>
  </data>
  <data name="NoVTArguementDescription" xml:space="preserve">
    <value>Zakáže zobrazení VirtualTerminal</value>
    <comment>{Locked="VirtualTerminal"}</comment>
  </data>
  <data name="OverrideArgumentDescription" xml:space="preserve">
    <value>Přepsat argumenty, které se odešlou instalačnímu programu</value>
  </data>
  <data name="PendingWorkError" xml:space="preserve">
    <value>Jejda, zapomněli jsme to udělat...</value>
  </data>
  <data name="PlainArgumentDescription" xml:space="preserve">
    <value>Zobrazí průběh ve výchozí barvě</value>
  </data>
  <data name="PreviewVersion" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="QueryArgumentDescription" xml:space="preserve">
    <value>Dotaz na vyhledání aplikace</value>
  </data>
  <data name="RainbowArgumentDescription" xml:space="preserve">
    <value>Průběh znázorněný barvami duhy</value>
  </data>
  <data name="RequiredArgError" xml:space="preserve">
    <value>Nebyl zadán požadovaný argument.</value>
  </data>
  <data name="SearchCommandDescription" xml:space="preserve">
    <value>Najít a zobrazit základní informace o aplikacích</value>
  </data>
  <data name="ShowCommandLongDescription" xml:space="preserve">
    <value>Zobrazí informace o konkrétní aplikaci.</value>
  </data>
  <data name="ShowCommandShortDescription" xml:space="preserve">
    <value>Zobrazuje podrobnosti o aplikaci</value>
  </data>
  <data name="SilentArgumentDescription" xml:space="preserve">
    <value>Vyžádat tichou instalaci</value>
  </data>
  <data name="SingleCharAfterDashError" xml:space="preserve">
    <value>Po jednom znaku - se může objevit jen jeden alias znaku.</value>
  </data>
  <data name="SourceAddCommandLongDescription" xml:space="preserve">
    <value>Přidat nový zdroj. Zdroj vám poskytne data, se kterými budete moct objevovat a instalovat aplikace. Přidávejte jenom zdroje v zabezpečeném umístění, kterým důvěřujete.</value>
  </data>
  <data name="SourceAddCommandShortDescription" xml:space="preserve">
    <value>Přidat nový zdroj</value>
  </data>
  <data name="SourceArgArgumentDescription" xml:space="preserve">
    <value>Argument odeslaný zdroji</value>
  </data>
  <data name="SourceArgumentDescription" xml:space="preserve">
    <value>Najít aplikaci podle konkrétního zdroje</value>
  </data>
  <data name="SourceCommandLongDescription" xml:space="preserve">
    <value>Spravujte zdroje prostřednictvím příkazů. Zdroj vám poskytne data, se kterými budete moct objevovat a instalovat aplikace. Přidávejte jenom zdroje v zabezpečeném umístění, kterým důvěřujete.</value>
  </data>
  <data name="SourceCommandShortDescription" xml:space="preserve">
    <value>Spravovat zdroje aplikací</value>
  </data>
  <data name="SourceListCommandLongDescription" xml:space="preserve">
    <value>Zobrazit seznam všech aktuálních zdrojů nebo úplné podrobnosti o konkrétním zdroji.</value>
  </data>
  <data name="SourceListCommandShortDescription" xml:space="preserve">
    <value>Zobrazit seznam aktuálních zdrojů</value>
  </data>
  <data name="SourceNameArgumentDescription" xml:space="preserve">
    <value>Název zdroje</value>
  </data>
  <data name="SourceRemoveCommandLongDescription" xml:space="preserve">
    <value>Odebrat konkrétní zdroj.</value>
  </data>
  <data name="SourceRemoveCommandShortDescription" xml:space="preserve">
    <value>Odebrat aktuální zdroje</value>
  </data>
  <data name="SourceResetCommandLongDescription" xml:space="preserve">
    <value>Tento příkaz uvolní existující zdroje a potenciálně opustí místní data. Bez jakéhokoli argumentu uvolní všechny zdroje a přidá ty výchozí. Pokud je k dispozici pojmenovaný zdroj, uvolní se pouze ten.</value>
  </data>
  <data name="SourceResetCommandShortDescription" xml:space="preserve">
    <value>Obnovit zdroje</value>
  </data>
  <data name="SourceTypeArgumentDescription" xml:space="preserve">
    <value>Typ zdroje</value>
  </data>
  <data name="SourceUpdateCommandLongDescription" xml:space="preserve">
    <value>Aktualizovat všechny zdroje nebo jen konkrétní zdroj.</value>
  </data>
  <data name="SourceUpdateCommandShortDescription" xml:space="preserve">
    <value>Aktualizovat aktuální zdroje</value>
  </data>
  <data name="TagArgumentDescription" xml:space="preserve">
    <value>Filtrovat výsledky podle štítku</value>
  </data>
  <data name="ToolDescription" xml:space="preserve">
    <value>Nástroj příkazového řádku WinGet umožní instalovat aplikace přímo z příkazového řádku.</value>
  </data>
  <data name="ToolInfoArgumentDescription" xml:space="preserve">
    <value>Zobrazuje obecné informace o nástroji</value>
  </data>
  <data name="ToolVersionArgumentDescription" xml:space="preserve">
    <value>Zobrazit verzi nástroje</value>
  </data>
  <data name="TooManyArgError" xml:space="preserve">
    <value>Argument byl zadán víckrát, než je povoleno.</value>
  </data>
  <data name="TooManyBehaviorsError" xml:space="preserve">
    <value>Je zadán více než jeden argument chování při instalaci.</value>
  </data>
  <data name="UnrecognizedCommand" xml:space="preserve">
    <value>Nerozpoznaný příkaz</value>
  </data>
  <data name="ValidateCommandLongDescription" xml:space="preserve">
    <value>Ověří manifest podle přísné sady pokynů. To vám umožní váš manifest ještě před odesláním zkontrolovat.</value>
  </data>
  <data name="ValidateCommandShortDescription" xml:space="preserve">
    <value>Ověří soubor manifestu</value>
  </data>
  <data name="ValidateManifestArgumentDescription" xml:space="preserve">
    <value>Cestu k manifestu je potřeba ověřit</value>
  </data>
  <data name="VerboseLogsArgumentDescription" xml:space="preserve">
    <value>Povolí podrobné protokolování pro WinGet.</value>
  </data>
  <data name="VersionArgumentDescription" xml:space="preserve">
    <value>Použít konkrétní verzi (ve výchozím nastavení se použije nejnovější verze)</value>
  </data>
  <data name="VersionsArgumentDescription" xml:space="preserve">
    <value>Zobrazit dostupné verze aplikace</value>
  </data>
</root>