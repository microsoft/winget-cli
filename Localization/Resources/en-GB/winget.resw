<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjoinedNotFlagError" xml:space="preserve">
    <value>Adjoined alias is not a flag</value>
  </data>
  <data name="AdjoinedNotFoundError" xml:space="preserve">
    <value>Adjoined flag alias not found</value>
  </data>
  <data name="AvailableArguments" xml:space="preserve">
    <value>The following arguments are available:</value>
  </data>
  <data name="AvailableCommands" xml:space="preserve">
    <value>The following commands are available:</value>
    <comment>Commands the tool supports</comment>
  </data>
  <data name="AvailableOptions" xml:space="preserve">
    <value>The following options are available:</value>
  </data>
  <data name="AvailableSubcommands" xml:space="preserve">
    <value>The following sub-commands are available:</value>
    <comment>Nested commands that can be run in context of the selected command</comment>
  </data>
  <data name="ChannelArgumentDescription" xml:space="preserve">
    <value>Use the specified channel; default is general audience</value>
  </data>
  <data name="Command" xml:space="preserve">
    <value>command</value>
    <comment>A command to give the software</comment>
  </data>
  <data name="CommandArgumentDescription" xml:space="preserve">
    <value>Filter results by command</value>
  </data>
  <data name="CommandRequiresAdmin" xml:space="preserve">
    <value>This command requires administrator privileges to execute.</value>
  </data>
  <data name="CountArgumentDescription" xml:space="preserve">
    <value>Show no more than specified number of results</value>
  </data>
  <data name="ExactArgumentDescription" xml:space="preserve">
    <value>Find app using exact match</value>
  </data>
  <data name="ExtraPositionalError" xml:space="preserve">
    <value>Found a positional argument when none was expected</value>
  </data>
  <data name="FileArgumentDescription" xml:space="preserve">
    <value>File to be hashed</value>
  </data>
  <data name="FlagContainAdjoinedError" xml:space="preserve">
    <value>Flag argument cannot contain adjoined value</value>
  </data>
  <data name="ForceArgumentDescription" xml:space="preserve">
    <value>Execute the command without prompts</value>
  </data>
  <data name="HashCommandLongDescription" xml:space="preserve">
    <value>Computes the hash of a local file, appropriate for entry into a manifest.  It can also compute the hash of the signature file of an MSIX package to enable streaming installations.</value>
  </data>
  <data name="HashCommandShortDescription" xml:space="preserve">
    <value>Helper to hash installer files</value>
  </data>
  <data name="HelpArgumentDescription" xml:space="preserve">
    <value>Shows help about the selected command</value>
  </data>
  <data name="HelpForDetails" xml:space="preserve">
    <value>For more details on a specific command, pass it the help argument.</value>
  </data>
  <data name="HelpLinkPreamble" xml:space="preserve">
    <value>More help can be found at:</value>
  </data>
  <data name="IdArgumentDescription" xml:space="preserve">
    <value>Filter results by id</value>
  </data>
  <data name="InstallationDisclaimer1" xml:space="preserve">
    <value>This application is licensed to you by its owner.</value>
  </data>
  <data name="InstallationDisclaimer2" xml:space="preserve">
    <value>Microsoft is not responsible for, nor does it grant any licences to, third-party packages.</value>
  </data>
  <data name="InstallationRequiresHigherWindows" xml:space="preserve">
    <value>Cannot install application, as it requires a higher version of Windows:</value>
  </data>
  <data name="InstallCommandLongDescription" xml:space="preserve">
    <value>Installs the selected application, either found by searching a configured source or directly from a manifest.</value>
  </data>
  <data name="InstallCommandShortDescription" xml:space="preserve">
    <value>Installs the given application</value>
  </data>
  <data name="InteractiveArgumentDescription" xml:space="preserve">
    <value>Request interactive installation; user input may be needed</value>
  </data>
  <data name="InvalidAliasError" xml:space="preserve">
    <value>Argument alias was not recognised for the current command</value>
  </data>
  <data name="InvalidArgumentSpecifierError" xml:space="preserve">
    <value>Invalid argument specifier</value>
  </data>
  <data name="InvalidNameError" xml:space="preserve">
    <value>Argument name was not recognised for the current command</value>
  </data>
  <data name="LanguageArgumentDescription" xml:space="preserve">
    <value>Language to install (if supported)</value>
  </data>
  <data name="LicenseAgreement" xml:space="preserve">
    <value>Licence Agreement</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>Links</value>
    <comment>Links to different webpages</comment>
  </data>
  <data name="LocationArgumentDescription" xml:space="preserve">
    <value>Location to install to (if supported)</value>
  </data>
  <data name="LogArgumentDescription" xml:space="preserve">
    <value>Log location (if supported)</value>
  </data>
  <data name="MainCopyrightNotice" xml:space="preserve">
    <value>Copyright (c) Microsoft Corporation. All rights reserved.</value>
  </data>
  <data name="MainHomepage" xml:space="preserve">
    <value>Homepage</value>
    <comment>The primary webpage for the software</comment>
  </data>
  <data name="ManifestArgumentDescription" xml:space="preserve">
    <value>The path to the manifest of the application</value>
  </data>
  <data name="ManifestValidationFail" xml:space="preserve">
    <value>Manifest validation failed.</value>
  </data>
  <data name="ManifestValidationSuccess" xml:space="preserve">
    <value>Manifest validation succeeded.</value>
  </data>
  <data name="ManifestValidationWarning" xml:space="preserve">
    <value>Manifest validation succeeded with warnings.</value>
  </data>
  <data name="MissingArgumentError" xml:space="preserve">
    <value>Argument value required, but none found</value>
  </data>
  <data name="MonikerArgumentDescription" xml:space="preserve">
    <value>Filter results by app moniker</value>
  </data>
  <data name="MsixArgumentDescription" xml:space="preserve">
    <value>Input file will be treated as msix; signature hash will be provided if signed</value>
  </data>
  <data name="MsixSignatureHashFailed" xml:space="preserve">
    <value>Failed to calculate MSIX signature hash.</value>
  </data>
  <data name="NameArgumentDescription" xml:space="preserve">
    <value>Filter results by name</value>
  </data>
  <data name="NoApplicableInstallers" xml:space="preserve">
    <value>No installers are applicable to the current system.</value>
  </data>
  <data name="NoVTArgumentDescription" xml:space="preserve">
    <value>Disables VirtualTerminal display</value>
    <comment>{Locked="VirtualTerminal"}</comment>
  </data>
  <data name="Options" xml:space="preserve">
    <value>options</value>
    <comment>Options to change how a command works</comment>
  </data>
  <data name="OverrideArgumentDescription" xml:space="preserve">
    <value>Override arguments to be passed on to the installer</value>
  </data>
  <data name="Package" xml:space="preserve">
    <value>Package</value>
    <comment>A software package</comment>
  </data>
  <data name="PendingWorkError" xml:space="preserve">
    <value>Oops, we forgot to do this...</value>
  </data>
  <data name="PreviewVersion" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="PrivacyStatement" xml:space="preserve">
    <value>Privacy Statement</value>
  </data>
  <data name="QueryArgumentDescription" xml:space="preserve">
    <value>The query used to search for an app</value>
  </data>
  <data name="RainbowArgumentDescription" xml:space="preserve">
    <value>Progress display a rainbow of colours</value>
  </data>
  <data name="RequiredArgError" xml:space="preserve">
    <value>Required argument not provided</value>
  </data>
  <data name="RetroArgumentDescription" xml:space="preserve">
    <value>Progress display as the default colour</value>
  </data>
  <data name="SearchCommandLongDescription" xml:space="preserve">
    <value>Searches for applications from configured sources.</value>
  </data>
  <data name="SearchCommandShortDescription" xml:space="preserve">
    <value>Find and show basic info of apps</value>
  </data>
  <data name="SettingLoadFailure" xml:space="preserve">
    <value>The following failures were found validating the settings:</value>
  </data>
  <data name="SettingsCommandLongDescription" xml:space="preserve">
    <value>Open settings in the default json text editor. If no editor is configured, opens settings in notepad. For available settings see https://aka.ms/winget-settings</value>
  </data>
  <data name="SettingsCommandShortDescription" xml:space="preserve">
    <value>Open settings</value>
  </data>
  <data name="SettingsWarnings" xml:space="preserve">
    <value>Unexpected error while loading settings. Please verify your settings by running the settings command.</value>
  </data>
  <data name="ShowCommandLongDescription" xml:space="preserve">
    <value>Shows information on a specific application.</value>
  </data>
  <data name="ShowCommandShortDescription" xml:space="preserve">
    <value>Shows info about an application</value>
  </data>
  <data name="SilentArgumentDescription" xml:space="preserve">
    <value>Request silent installation</value>
  </data>
  <data name="SingleCharAfterDashError" xml:space="preserve">
    <value>Only the single character alias can occur after a single -</value>
  </data>
  <data name="SourceAddCommandLongDescription" xml:space="preserve">
    <value>Add a new source. A source provides the data for you to discover and install applications. Only add a new source if you trust it as a secure location.</value>
  </data>
  <data name="SourceAddCommandShortDescription" xml:space="preserve">
    <value>Add a new source</value>
  </data>
  <data name="SourceArgArgumentDescription" xml:space="preserve">
    <value>Argument given to the source</value>
  </data>
  <data name="SourceArgumentDescription" xml:space="preserve">
    <value>Find app using the specified source</value>
  </data>
  <data name="SourceCommandLongDescription" xml:space="preserve">
    <value>Manage sources with the sub-commands. A source provides the data for you to discover and install applications. Only add a new source if you trust it as a secure location.</value>
  </data>
  <data name="SourceCommandShortDescription" xml:space="preserve">
    <value>Manage sources of applications</value>
  </data>
  <data name="SourceListCommandLongDescription" xml:space="preserve">
    <value>List all current sources, or full details of a specific source.</value>
  </data>
  <data name="SourceListCommandShortDescription" xml:space="preserve">
    <value>List current sources</value>
  </data>
  <data name="SourceNameArgumentDescription" xml:space="preserve">
    <value>Name of the source</value>
  </data>
  <data name="SourceRemoveCommandLongDescription" xml:space="preserve">
    <value>Remove a specific source.</value>
  </data>
  <data name="SourceRemoveCommandShortDescription" xml:space="preserve">
    <value>Remove current sources</value>
  </data>
  <data name="SourceResetCommandLongDescription" xml:space="preserve">
    <value>This command drops existing sources, potentially leaving any local data behind. Without any argument, it will drop all sources and add the defaults. If a named source is provided, only that source will be dropped.</value>
  </data>
  <data name="SourceResetCommandShortDescription" xml:space="preserve">
    <value>Reset sources</value>
  </data>
  <data name="SourceTypeArgumentDescription" xml:space="preserve">
    <value>Type of the source</value>
  </data>
  <data name="SourceUpdateCommandLongDescription" xml:space="preserve">
    <value>Update all sources, or only a specific source.</value>
  </data>
  <data name="SourceUpdateCommandShortDescription" xml:space="preserve">
    <value>Update current sources</value>
  </data>
  <data name="TagArgumentDescription" xml:space="preserve">
    <value>Filter results by tag</value>
  </data>
  <data name="ThirdPartSoftwareNotices" xml:space="preserve">
    <value>Third Party Notices</value>
  </data>
  <data name="ToolInfoArgumentDescription" xml:space="preserve">
    <value>Display general info of the tool</value>
  </data>
  <data name="ToolVersionArgumentDescription" xml:space="preserve">
    <value>Display the version of the tool</value>
  </data>
  <data name="TooManyArgError" xml:space="preserve">
    <value>Argument provided more times than allowed</value>
  </data>
  <data name="TooManyBehaviorsError" xml:space="preserve">
    <value>More than one install behaviour argument provided</value>
  </data>
  <data name="UnexpectedErrorExecutingCommand" xml:space="preserve">
    <value>An unexpected error occurred while executing the command:</value>
  </data>
  <data name="UnrecognizedCommand" xml:space="preserve">
    <value>Unrecognised command</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>usage</value>
    <comment>The way to use the software</comment>
  </data>
  <data name="ValidateCommandLongDescription" xml:space="preserve">
    <value>Validates a manifest using a strict set of guidelines. This is intended to enable you to check your manifest before submitting to a repo.</value>
  </data>
  <data name="ValidateCommandShortDescription" xml:space="preserve">
    <value>Validates a manifest file</value>
  </data>
  <data name="ValidateManifestArgumentDescription" xml:space="preserve">
    <value>The path to the manifest to be validated</value>
  </data>
  <data name="VerboseLogsArgumentDescription" xml:space="preserve">
    <value>Enables verbose logging for WinGet</value>
  </data>
  <data name="VerifyFileSignedMsix" xml:space="preserve">
    <value>Please verify that the input file is a valid, signed MSIX.</value>
  </data>
  <data name="VersionArgumentDescription" xml:space="preserve">
    <value>Use the specified version; default is the latest version</value>
  </data>
  <data name="VersionsArgumentDescription" xml:space="preserve">
    <value>Show available versions of the app</value>
  </data>
</root>