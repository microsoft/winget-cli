//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";

// Forward Declare
namespace Microsoft
{
    namespace Management
    {
        namespace Deployment
        {
            typedef enum AppCatalogOrigin AppCatalogOrigin;

            typedef enum AppCatalogTrustLevel AppCatalogTrustLevel;

            typedef enum CompositeSearchBehavior CompositeSearchBehavior;

            typedef enum InstallMode InstallMode;

            typedef enum InstallProgressState InstallProgressState;

            typedef enum InstallScope InstallScope;

            typedef enum MatchType MatchType;

            typedef enum PackageMatchField PackageMatchField;

            typedef enum PackageVersionMetadata PackageVersionMetadata;

            typedef enum PredefinedAppCatalog PredefinedAppCatalog;

            typedef struct AppCatalogDetails AppCatalogDetails;

            typedef struct InstallProgress InstallProgress;

            typedef struct PackageMatchFilter PackageMatchFilter;

            typedef struct PackageVersionId PackageVersionId;

            interface IAppCatalog;

            interface IAppInstaller;

            interface IFindPackagesOptions;

            interface IFindPackagesResult;

            interface IGetAppCatalogsResult;

            interface IGetCompositeAppCatalogOptions;

            interface IInstallOptions;

            interface IInstallResult;

            interface IPackage;

            interface IPackageFactory;

            interface IPackageVersion;

            interface IResultMatch;

            runtimeclass AppCatalog;

            runtimeclass AppInstaller;

            runtimeclass FindPackagesOptions;

            runtimeclass FindPackagesResult;

            runtimeclass GetAppCatalogsResult;

            runtimeclass GetCompositeAppCatalogOptions;

            runtimeclass InstallOptions;

            runtimeclass InstallResult;

            runtimeclass Package;

            runtimeclass PackageVersion;

            runtimeclass ResultMatch;
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace Management
    {
        namespace Deployment
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Microsoft.Management.Deployment.AppCatalog*>;

                interface Windows.Foundation.Collections.IIterable<Microsoft.Management.Deployment.PackageMatchFilter>;

                interface Windows.Foundation.Collections.IIterable<Microsoft.Management.Deployment.PackageVersionId>;

                interface Windows.Foundation.Collections.IIterable<Microsoft.Management.Deployment.ResultMatch*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.Management.Deployment.AppCatalog*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.Management.Deployment.PackageMatchFilter>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.Management.Deployment.PackageVersionId>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.Management.Deployment.ResultMatch*>;

                interface Windows.Foundation.Collections.IVectorView<Microsoft.Management.Deployment.AppCatalog*>;

                interface Windows.Foundation.Collections.IVectorView<Microsoft.Management.Deployment.PackageMatchFilter>;

                interface Windows.Foundation.Collections.IVectorView<Microsoft.Management.Deployment.PackageVersionId>;

                interface Windows.Foundation.Collections.IVectorView<Microsoft.Management.Deployment.ResultMatch*>;

                interface Windows.Foundation.Collections.IVector<Microsoft.Management.Deployment.AppCatalog*>;

                interface Windows.Foundation.Collections.IVector<Microsoft.Management.Deployment.PackageMatchFilter>;

                interface Windows.Foundation.IAsyncOperationWithProgress<Microsoft.Management.Deployment.InstallResult*, Microsoft.Management.Deployment.InstallProgress>;

                interface Windows.Foundation.IAsyncOperation<Microsoft.Management.Deployment.AppCatalog*>;

                interface Windows.Foundation.IAsyncOperation<Microsoft.Management.Deployment.FindPackagesResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Microsoft.Management.Deployment.AppCatalog*>*>;
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace Management
    {
        namespace Deployment
        {
            [version(0x00000001)]
            enum AppCatalogOrigin
            {
                Default    = 0,
                User       = 1,
                Predefined = 2
            };

            [version(0x00000001)]
            enum AppCatalogTrustLevel
            {
                None    = 0,
                Trusted = 1
            };

            [version(0x00000001)]
            enum CompositeSearchBehavior
            {
                Installed   = 0,
                Installing  = 1,
                AllLocal    = 2,
                AllPackages = 3
            };

            [version(0x00000001)]
            enum InstallMode
            {
                Default     = 0,
                Silent      = 1,
                Interactive = 2
            };

            [version(0x00000001)]
            enum InstallProgressState
            {
                Queued      = 0,
                Downloading = 1,
                Installing  = 2,
                PostInstall = 3
            };

            [version(0x00000001)]
            enum InstallScope
            {
                User    = 0,
                Machine = 1
            };

            [version(0x00000001)]
            enum MatchType
            {
                Exact           = 0,
                CaseInsensitive = 1,
                StartsWith      = 2,
                Fuzzy           = 3,
                Substring       = 4,
                FuzzySubstring  = 5,
                Wildcard        = 6
            };

            [version(0x00000001)]
            enum PackageMatchField
            {
                AppCatalogDefined = 0,
                Id                = 1,
                Name              = 2,
                Moniker           = 3,
                Command           = 4,
                Tag               = 5
            };

            [version(0x00000001)]
            enum PackageVersionMetadata
            {
                InstalledType            = 0,
                InstalledScope           = 1,
                InstalledLocation        = 2,
                StandardUninstallCommand = 3,
                SilentUninstallCommand   = 4,
                Publisher                = 5,
                Locale                   = 6
            };

            [version(0x00000001)]
            enum PredefinedAppCatalog
            {
                OpenWindowsCatalog = 0,
                InstalledPackages  = 1,
                InstallingPackages = 2
            };

            [version(0x00010000)]
            struct AppCatalogDetails
            {
                HSTRING Name;
                HSTRING Type;
                HSTRING Arg;
                HSTRING Data;
                HSTRING Identifier;
                Windows.Foundation.DateTime LastUpdateTime;
                Microsoft.Management.Deployment.AppCatalogOrigin Origin;
                Microsoft.Management.Deployment.AppCatalogTrustLevel TrustLevel;
            };

            [version(0x00010000)]
            struct InstallProgress
            {
                Microsoft.Management.Deployment.InstallProgressState State;
                UINT32 BytesDownloaded;
                UINT32 BytesRequired;
                UINT32 DownloadPercentage;
            };

            [version(0x00010000)]
            struct PackageMatchFilter
            {
                boolean IsAdditive;
                Microsoft.Management.Deployment.MatchType Type;
                Microsoft.Management.Deployment.PackageMatchField Field;
                HSTRING Value;
            };

            [version(0x00010000)]
            struct PackageVersionId
            {
                HSTRING AppCatalogId;
                HSTRING Version;
                HSTRING Channel;
            };

            [exclusiveto(Microsoft.Management.Deployment.AppCatalog)]
            [uuid(36AD6383-A371-593C-96F5-1672D3DE6F17)]
            [version(0x00000001)]
            interface IAppCatalog : IInspectable
            {
                [propget] HRESULT IsComposite([out] [retval] boolean* value);
                [propget] HRESULT Details([out] [retval] Microsoft.Management.Deployment.AppCatalogDetails* value);
                HRESULT OpenAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT FindPackagesAsync([in] Microsoft.Management.Deployment.FindPackagesOptions* options, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Management.Deployment.FindPackagesResult*>** operation);
            }

            [exclusiveto(Microsoft.Management.Deployment.AppInstaller)]
            [uuid(14861127-708D-59EF-B439-51C154DAEFEB)]
            [version(0x00000001)]
            interface IAppInstaller : IInspectable
            {
                HRESULT GetAppCatalogsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Microsoft.Management.Deployment.AppCatalog*>*>** operation);
                [default_overload] [overload("GetAppCatalogAsync")] HRESULT GetAppCatalogAsync([in] Microsoft.Management.Deployment.PredefinedAppCatalog predefinedAppCatalog, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Management.Deployment.AppCatalog*>** operation);
                [overload("GetAppCatalogAsync")] HRESULT GetAppCatalogAsync2([in] HSTRING catalogId, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Management.Deployment.AppCatalog*>** operation);
                HRESULT GetCompositeAppCatalogAsync([in] Microsoft.Management.Deployment.GetCompositeAppCatalogOptions* options, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Management.Deployment.AppCatalog*>** operation);
                HRESULT InstallPackageAsync([in] Microsoft.Management.Deployment.InstallOptions* options, [out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Microsoft.Management.Deployment.InstallResult*, Microsoft.Management.Deployment.InstallProgress>** operation);
            }

            [exclusiveto(Microsoft.Management.Deployment.FindPackagesOptions)]
            [uuid(1A56286F-6375-5CE4-A0A0-D127E962AB57)]
            [version(0x00000001)]
            interface IFindPackagesOptions : IInspectable
            {
                [propget] HRESULT Filters([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.Management.Deployment.PackageMatchFilter>** value);
                [propput] HRESULT Filters([in] Windows.Foundation.Collections.IVector<Microsoft.Management.Deployment.PackageMatchFilter>* value);
                [propget] HRESULT Limit([out] [retval] UINT32* value);
                [propput] HRESULT Limit([in] UINT32 value);
                [propget] HRESULT CompositeSearchBehavior([out] [retval] Microsoft.Management.Deployment.CompositeSearchBehavior* value);
                [propput] HRESULT CompositeSearchBehavior([in] Microsoft.Management.Deployment.CompositeSearchBehavior value);
            }

            [exclusiveto(Microsoft.Management.Deployment.FindPackagesResult)]
            [uuid(14A5EDA3-7E1A-5D66-892C-86AEDF8DBAAF)]
            [version(0x00000001)]
            interface IFindPackagesResult : IInspectable
            {
                [propget] HRESULT Matches([out] [retval] Windows.Foundation.Collections.IVectorView<Microsoft.Management.Deployment.ResultMatch*>** value);
                [propget] HRESULT IsTruncated([out] [retval] boolean* value);
            }

            [exclusiveto(Microsoft.Management.Deployment.GetAppCatalogsResult)]
            [uuid(8DAFBFE7-D308-5083-B9CD-C644C5C58AAB)]
            [version(0x00000001)]
            interface IGetAppCatalogsResult : IInspectable
            {
                [propget] HRESULT AppCatalogs([out] [retval] Windows.Foundation.Collections.IVectorView<Microsoft.Management.Deployment.AppCatalog*>** value);
            }

            [exclusiveto(Microsoft.Management.Deployment.GetCompositeAppCatalogOptions)]
            [uuid(56EB7DE1-7A1B-5927-87C0-F483608C3C68)]
            [version(0x00000001)]
            interface IGetCompositeAppCatalogOptions : IInspectable
            {
                [propget] HRESULT Catalogs([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.Management.Deployment.AppCatalog*>** value);
                [propput] HRESULT Catalogs([in] Windows.Foundation.Collections.IVector<Microsoft.Management.Deployment.AppCatalog*>* value);
                [propget] HRESULT CompositeSearchBehavior([out] [retval] Microsoft.Management.Deployment.CompositeSearchBehavior* value);
                [propput] HRESULT CompositeSearchBehavior([in] Microsoft.Management.Deployment.CompositeSearchBehavior value);
            }

            [exclusiveto(Microsoft.Management.Deployment.InstallOptions)]
            [uuid(452AA74E-951C-5618-85F5-BA0262998B66)]
            [version(0x00000001)]
            interface IInstallOptions : IInspectable
            {
                [propget] HRESULT Package([out] [retval] Microsoft.Management.Deployment.Package** value);
                [propput] HRESULT Package([in] Microsoft.Management.Deployment.Package* value);
                [propget] HRESULT PackageVersionId([out] [retval] Microsoft.Management.Deployment.PackageVersionId* value);
                [propput] HRESULT PackageVersionId([in] Microsoft.Management.Deployment.PackageVersionId value);
                [propget] HRESULT PreferredInstallLocation([out] [retval] HSTRING* value);
                [propput] HRESULT PreferredInstallLocation([in] HSTRING value);
                [propget] HRESULT InstallScope([out] [retval] Microsoft.Management.Deployment.InstallScope* value);
                [propput] HRESULT InstallScope([in] Microsoft.Management.Deployment.InstallScope value);
                [propget] HRESULT InstallMode([out] [retval] Microsoft.Management.Deployment.InstallMode* value);
                [propput] HRESULT InstallMode([in] Microsoft.Management.Deployment.InstallMode value);
                [propget] HRESULT LogOutputPath([out] [retval] HSTRING* value);
                [propput] HRESULT LogOutputPath([in] HSTRING value);
                [propget] HRESULT AllowHashMismatch([out] [retval] boolean* value);
                [propput] HRESULT AllowHashMismatch([in] boolean value);
                [propget] HRESULT ReplacementInstallerArguments([out] [retval] HSTRING* value);
                [propput] HRESULT ReplacementInstallerArguments([in] HSTRING value);
                [propget] HRESULT AdditionalTelemetryArguments([out] [retval] HSTRING* value);
                [propput] HRESULT AdditionalTelemetryArguments([in] HSTRING value);
                [propget] HRESULT AdditionalAppCatalogArguments([out] [retval] HSTRING* value);
                [propput] HRESULT AdditionalAppCatalogArguments([in] HSTRING value);
            }

            [exclusiveto(Microsoft.Management.Deployment.InstallResult)]
            [uuid(B76B30E5-6C1F-55D3-B73C-A65AB096BD66)]
            [version(0x00000001)]
            interface IInstallResult : IInspectable
            {
                [propget] HRESULT CorrelationId([out] [retval] HSTRING* value);
                [propget] HRESULT RebootRequired([out] [retval] boolean* value);
            }

            [exclusiveto(Microsoft.Management.Deployment.Package)]
            [uuid(9716F9EA-5B9D-5AEF-9357-3917BEDAE5B5)]
            [version(0x00000001)]
            interface IPackage : IInspectable
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [propget] HRESULT InstalledVersion([out] [retval] Microsoft.Management.Deployment.PackageVersion** value);
                [propget] HRESULT AvailableVersions([out] [retval] Windows.Foundation.Collections.IVectorView<Microsoft.Management.Deployment.PackageVersionId>** value);
                [propget] HRESULT LatestAvailableVersion([out] [retval] Microsoft.Management.Deployment.PackageVersion** value);
                HRESULT GetAvailableVersion([in] Microsoft.Management.Deployment.PackageVersionId versionKey, [out] [retval] Microsoft.Management.Deployment.PackageVersion** result);
                [propget] HRESULT IsUpdateAvailable([out] [retval] boolean* value);
                [propget] HRESULT IsInstalling([out] [retval] boolean* value);
                [propget] HRESULT InstallProgress([out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Microsoft.Management.Deployment.InstallResult*, Microsoft.Management.Deployment.InstallProgress>** value);
            }

            [exclusiveto(Microsoft.Management.Deployment.Package)]
            [uuid(5F6BB71B-251B-50E8-AF0F-922DF6A0DC66)]
            [version(0x00000001)]
            interface IPackageFactory : IInspectable
            {
                HRESULT CreateInstance([in] HSTRING manifestPath, [out] [retval] Microsoft.Management.Deployment.Package** value);
            }

            [exclusiveto(Microsoft.Management.Deployment.PackageVersion)]
            [uuid(95A5729B-0740-5138-A4FC-9922F84EBDB5)]
            [version(0x00000001)]
            interface IPackageVersion : IInspectable
            {
                HRESULT GetMetadata([in] Microsoft.Management.Deployment.PackageVersionMetadata metadataType, [out] [retval] HSTRING* result);
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [propget] HRESULT AppCatalogIdentifier([out] [retval] HSTRING* value);
                [propget] HRESULT AppCatalogName([out] [retval] HSTRING* value);
                [propget] HRESULT Version([out] [retval] HSTRING* value);
                [propget] HRESULT Channel([out] [retval] HSTRING* value);
                [propget] HRESULT PackageFamilyName([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [propget] HRESULT ProductCode([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [propget] HRESULT AppCatalog([out] [retval] Microsoft.Management.Deployment.AppCatalog** value);
            }

            [exclusiveto(Microsoft.Management.Deployment.ResultMatch)]
            [uuid(09C0A63E-392A-5E90-8567-80F5CC653BBD)]
            [version(0x00000001)]
            interface IResultMatch : IInspectable
            {
                [propget] HRESULT Package([out] [retval] Microsoft.Management.Deployment.Package** value);
                [propget] HRESULT MatchCriteria([out] [retval] Microsoft.Management.Deployment.PackageMatchFilter* value);
            }

            [activatable(0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass AppCatalog
            {
                [default] interface Microsoft.Management.Deployment.IAppCatalog;
            }

            [activatable(0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass AppInstaller
            {
                [default] interface Microsoft.Management.Deployment.IAppInstaller;
            }

            [activatable(0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass FindPackagesOptions
            {
                [default] interface Microsoft.Management.Deployment.IFindPackagesOptions;
            }

            [activatable(0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass FindPackagesResult
            {
                [default] interface Microsoft.Management.Deployment.IFindPackagesResult;
            }

            [activatable(0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass GetAppCatalogsResult
            {
                [default] interface Microsoft.Management.Deployment.IGetAppCatalogsResult;
            }

            [activatable(0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass GetCompositeAppCatalogOptions
            {
                [default] interface Microsoft.Management.Deployment.IGetCompositeAppCatalogOptions;
            }

            [activatable(0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass InstallOptions
            {
                [default] interface Microsoft.Management.Deployment.IInstallOptions;
            }

            [activatable(0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass InstallResult
            {
                [default] interface Microsoft.Management.Deployment.IInstallResult;
            }

            [activatable(0x00000001)]
            [activatable(Microsoft.Management.Deployment.IPackageFactory, 0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass Package
            {
                [default] interface Microsoft.Management.Deployment.IPackage;
            }

            [activatable(0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass PackageVersion
            {
                [default] interface Microsoft.Management.Deployment.IPackageVersion;
            }

            [activatable(0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass ResultMatch
            {
                [default] interface Microsoft.Management.Deployment.IResultMatch;
            }
        }
    }
}
