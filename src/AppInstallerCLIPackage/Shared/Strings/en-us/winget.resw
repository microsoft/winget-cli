<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjoinedNotFlagError" xml:space="preserve">
    <value>Adjoined alias is not a flag</value>
  </data>
  <data name="AdjoinedNotFoundError" xml:space="preserve">
    <value>Adjoined flag alias not found</value>
  </data>
  <data name="AvailableArguments" xml:space="preserve">
    <value>The following arguments are available:</value>
  </data>
  <data name="AvailableCommands" xml:space="preserve">
    <value>The following commands are available:</value>
    <comment>Commands the tool supports</comment>
  </data>
  <data name="AvailableHeader" xml:space="preserve">
    <value>Available</value>
    <comment>As in "a new version is available to update to".</comment>
  </data>
  <data name="AvailableOptions" xml:space="preserve">
    <value>The following options are available:</value>
  </data>
  <data name="AvailableSubcommands" xml:space="preserve">
    <value>The following sub-commands are available:</value>
    <comment>Nested commands that can be run in context of the selected command</comment>
  </data>
  <data name="ChannelArgumentDescription" xml:space="preserve">
    <value>Use the specified channel; default is general audience</value>
  </data>
  <data name="Command" xml:space="preserve">
    <value>command</value>
    <comment>A command to give the software</comment>
  </data>
  <data name="CommandArgumentDescription" xml:space="preserve">
    <value>Filter results by command</value>
  </data>
  <data name="CommandLineArgumentDescription" xml:space="preserve">
    <value>The full command line for completion</value>
  </data>
  <data name="CommandRequiresAdmin" xml:space="preserve">
    <value>This command requires administrator privileges to execute.</value>
  </data>
  <data name="CompleteCommandLongDescription" xml:space="preserve">
    <value>This command can be used to request context sensitive command line completion. The command line, cursor position, and word to be completed are passed in. The output is a set of potential values based on the inputs, one possible value per line.</value>
  </data>
  <data name="CompleteCommandShortDescription" xml:space="preserve">
    <value>Enables context sensitive command line completion</value>
  </data>
  <data name="CountArgumentDescription" xml:space="preserve">
    <value>Show no more than specified number of results</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="ExactArgumentDescription" xml:space="preserve">
    <value>Find package using exact match</value>
  </data>
  <data name="ExperimentalArgumentDescription" xml:space="preserve">
    <value>Experimental argument for demonstration purposes</value>
  </data>
  <data name="ExperimentalCommandLongDescription" xml:space="preserve">
    <value>This command is an example on how to implement an experimental feature. To turn on go to 'winget settings' and enable experimentalCmd or experimentalArg features.</value>
    <comment>{Locked="winget settings"}</comment>
  </data>
  <data name="ExperimentalCommandShortDescription" xml:space="preserve">
    <value>Experimental feature example</value>
  </data>
  <data name="ExtraPositionalError" xml:space="preserve">
    <value>Found a positional argument when none was expected</value>
  </data>
  <data name="FeatureDisabledMessage" xml:space="preserve">
    <value>This feature is a work in progress, and may be changed dramatically or removed altogether in the future. To enable it, edit your settings ('winget settings') to include the experimental feature</value>
    <comment>{Locked="winget settings"}</comment>
  </data>
  <data name="FeaturesCommandLongDescription" xml:space="preserve">
    <value>Shows the status of experimental features. Experimental features can be turn on via 'winget settings'.</value>
    <comment>{Locked="winget settings"}</comment>
  </data>
  <data name="FeaturesCommandShortDescription" xml:space="preserve">
    <value>Shows the status of experimental features</value>
  </data>
  <data name="FeaturesDisabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="FeaturesEnabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="FeaturesFeature" xml:space="preserve">
    <value>Feature</value>
  </data>
  <data name="FeaturesLink" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="FeaturesMessage" xml:space="preserve">
    <value>The following experimental features are in progress.
They can be configured through the settings file 'winget settings'.</value>
    <comment>{Locked="winget settings"}</comment>
  </data>
  <data name="FeaturesProperty" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="FeaturesStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="FileArgumentDescription" xml:space="preserve">
    <value>File to be hashed</value>
  </data>
  <data name="FlagContainAdjoinedError" xml:space="preserve">
    <value>Flag argument cannot contain adjoined value</value>
  </data>
  <data name="HashCommandLongDescription" xml:space="preserve">
    <value>Computes the hash of a local file, appropriate for entry into a manifest.  It can also compute the hash of the signature file of an MSIX package to enable streaming installations.</value>
  </data>
  <data name="HashCommandShortDescription" xml:space="preserve">
    <value>Helper to hash installer files</value>
  </data>
  <data name="HelpArgumentDescription" xml:space="preserve">
    <value>Shows help about the selected command</value>
  </data>
  <data name="HelpForDetails" xml:space="preserve">
    <value>For more details on a specific command, pass it the help argument.</value>
  </data>
  <data name="HelpLinkPreamble" xml:space="preserve">
    <value>More help can be found at:</value>
  </data>
  <data name="IdArgumentDescription" xml:space="preserve">
    <value>Filter results by id</value>
  </data>
  <data name="InstallationDisclaimer1" xml:space="preserve">
    <value>This application is licensed to you by its owner.</value>
  </data>
  <data name="InstallationDisclaimer2" xml:space="preserve">
    <value>Microsoft is not responsible for, nor does it grant any licenses to, third-party packages.</value>
  </data>
  <data name="InstallationDisclaimerMSStore" xml:space="preserve">
    <value>This package is provided through Microsoft Store. winget may need to acquire the package from Microsoft Store on behalf of the current user.</value>
    <comment>{Locked="winget"}</comment>
  </data>
  <data name="InstallationRequiresHigherWindows" xml:space="preserve">
    <value>Cannot install package, as it requires a higher version of Windows:</value>
  </data>
  <data name="InstallCommandLongDescription" xml:space="preserve">
    <value>Installs the selected package, either found by searching a configured source or directly from a manifest. By default, the query must case-insensitively match the id, name, or moniker of the package. Other fields can be used by passing their appropriate option.</value>
    <comment>id, name, and moniker are all named values in our context, and may benefit from not being translated.</comment>
  </data>
  <data name="InstallCommandShortDescription" xml:space="preserve">
    <value>Installs the given package</value>
  </data>
  <data name="InstallerHashMismatchAdminBlock" xml:space="preserve">
    <value>Installer hash does not match; this cannot be overridden when running as admin</value>
  </data>
  <data name="InstallerHashMismatchOverridden" xml:space="preserve">
    <value>Installer hash does not match; proceeding due to --force</value>
    <comment>{Locked="--force"}</comment>
  </data>
  <data name="InstallerHashMismatchOverrideRequired" xml:space="preserve">
    <value>Installer hash does not match; to override this check use --force</value>
    <comment>{Locked="--force"}</comment>
  </data>
  <data name="InstallerHashVerified" xml:space="preserve">
    <value>Successfully verified installer hash</value>
  </data>
  <data name="InstallFlowInstallSuccess" xml:space="preserve">
    <value>Successfully installed</value>
  </data>
  <data name="InstallFlowStartingPackageInstall" xml:space="preserve">
    <value>Starting package install...</value>
  </data>
  <data name="InstallForceArgumentDescription" xml:space="preserve">
    <value>Override the installer hash check</value>
  </data>
  <data name="InteractiveArgumentDescription" xml:space="preserve">
    <value>Request interactive installation; user input may be needed</value>
  </data>
  <data name="InvalidAliasError" xml:space="preserve">
    <value>Argument alias was not recognized for the current command</value>
  </data>
  <data name="InvalidArgumentSpecifierError" xml:space="preserve">
    <value>Invalid argument specifier</value>
  </data>
  <data name="InvalidNameError" xml:space="preserve">
    <value>Argument name was not recognized for the current command</value>
  </data>
  <data name="LanguageArgumentDescription" xml:space="preserve">
    <value>Language to install (if supported)</value>
  </data>
  <data name="LicenseAgreement" xml:space="preserve">
    <value>License Agreement</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>Links</value>
    <comment>Links to different webpages</comment>
  </data>
  <data name="ListCommandLongDescription" xml:space="preserve">
    <value>The list command displays the packages installed on the system, as well as whether an update is available. Additional options can be provided to filter the output, much like the search command.</value>
    <comment>{Locked="list","search"}</comment>
  </data>
  <data name="ListCommandShortDescription" xml:space="preserve">
    <value>Display installed packages</value>
  </data>
  <data name="LocationArgumentDescription" xml:space="preserve">
    <value>Location to install to (if supported)</value>
  </data>
  <data name="LogArgumentDescription" xml:space="preserve">
    <value>Log location (if supported)</value>
  </data>
  <data name="MainCopyrightNotice" xml:space="preserve">
    <value>Copyright (c) Microsoft Corporation. All rights reserved.</value>
  </data>
  <data name="MainHomepage" xml:space="preserve">
    <value>Homepage</value>
    <comment>The primary webpage for the software</comment>
  </data>
  <data name="ManifestArgumentDescription" xml:space="preserve">
    <value>The path to the manifest of the package</value>
  </data>
  <data name="ManifestValidationFail" xml:space="preserve">
    <value>Manifest validation failed.</value>
  </data>
  <data name="ManifestValidationSuccess" xml:space="preserve">
    <value>Manifest validation succeeded.</value>
  </data>
  <data name="ManifestValidationWarning" xml:space="preserve">
    <value>Manifest validation succeeded with warnings.</value>
  </data>
  <data name="MissingArgumentError" xml:space="preserve">
    <value>Argument value required, but none found</value>
  </data>
  <data name="MonikerArgumentDescription" xml:space="preserve">
    <value>Filter results by moniker</value>
  </data>
  <data name="MsixArgumentDescription" xml:space="preserve">
    <value>Input file will be treated as msix; signature hash will be provided if signed</value>
  </data>
  <data name="MsixSignatureHashFailed" xml:space="preserve">
    <value>Failed to calculate MSIX signature hash.</value>
  </data>
  <data name="MSStoreAppBlocked" xml:space="preserve">
    <value>Failed to install or update Microsoft Store package because the specific app is blocked by policy</value>
  </data>
  <data name="MSStoreInstallOrUpdateFailed" xml:space="preserve">
    <value>Failed to install or update Microsoft Store package. Error code:</value>
  </data>
  <data name="MSStoreInstallGetEntitlementNetworkError" xml:space="preserve">
    <value>Verifying/Requesting package acquisition failed: network error</value>
  </data>
  <data name="MSStoreInstallGetEntitlementNoStoreAccount" xml:space="preserve">
    <value>Verifying/Requesting package acquisition failed: no store account found</value>
  </data>
  <data name="MSStoreInstallGetEntitlementServerError" xml:space="preserve">
    <value>Verifying/Requesting package acquisition failed: server error</value>
  </data>
  <data name="MSStoreInstallGetEntitlementSuccess" xml:space="preserve">
    <value>Verifying/Requesting package acquisition success</value>
  </data>
  <data name="MSStoreStoreClientBlocked" xml:space="preserve">
    <value>Failed to install or update Microsoft Store package because Microsoft Store client is blocked by policy</value>
  </data>
  <data name="MSStoreInstallTryGetEntitlement" xml:space="preserve">
    <value>Verifying/Requesting package acquisition...</value>
  </data>
  <data name="MultipleInstalledPackagesFound" xml:space="preserve">
    <value>Multiple installed packages found matching input criteria. Please refine the input.</value>
  </data>
  <data name="MultiplePackagesFound" xml:space="preserve">
    <value>Multiple packages found matching input criteria. Please refine the input.</value>
  </data>
  <data name="NameArgumentDescription" xml:space="preserve">
    <value>Filter results by name</value>
  </data>
  <data name="NoApplicableInstallers" xml:space="preserve">
    <value>No installers are applicable to the current system.</value>
  </data>
  <data name="NoExperimentalFeaturesMessage" xml:space="preserve">
    <value>There are currently no experimental features available. </value>
  </data>
  <data name="NoInstalledPackageFound" xml:space="preserve">
    <value>No installed package found matching input criteria.</value>
  </data>
  <data name="NoPackageFound" xml:space="preserve">
    <value>No package found matching input criteria.</value>
  </data>
  <data name="NoVTArgumentDescription" xml:space="preserve">
    <value>Disables VirtualTerminal display</value>
    <comment>{Locked="VirtualTerminal"}</comment>
  </data>
  <data name="Options" xml:space="preserve">
    <value>options</value>
    <comment>Options to change how a command works</comment>
  </data>
  <data name="OverrideArgumentDescription" xml:space="preserve">
    <value>Override arguments to be passed on to the installer</value>
  </data>
  <data name="Package" xml:space="preserve">
    <value>Package</value>
    <comment>A software package</comment>
  </data>
  <data name="PendingWorkError" xml:space="preserve">
    <value>Oops, we forgot to do this...</value>
  </data>
  <data name="PositionArgumentDescription" xml:space="preserve">
    <value>The position of the cursor within the command line</value>
  </data>
  <data name="PreviewVersion" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="PrivacyStatement" xml:space="preserve">
    <value>Privacy Statement</value>
  </data>
  <data name="QueryArgumentDescription" xml:space="preserve">
    <value>The query used to search for a package</value>
  </data>
  <data name="RainbowArgumentDescription" xml:space="preserve">
    <value>Progress display a rainbow of colors</value>
  </data>
  <data name="RequiredArgError" xml:space="preserve">
    <value>Required argument not provided</value>
  </data>
  <data name="RetroArgumentDescription" xml:space="preserve">
    <value>Progress display as the default color</value>
  </data>
  <data name="SearchCommandLongDescription" xml:space="preserve">
    <value>Searches for packages from configured sources.</value>
  </data>
  <data name="SearchCommandShortDescription" xml:space="preserve">
    <value>Find and show basic info of packages</value>
  </data>
  <data name="SearchId" xml:space="preserve">
    <value>Id</value>
    <comment>Abbreviation of Identifier.</comment>
  </data>
  <data name="SearchMatch" xml:space="preserve">
    <value>Match</value>
  </data>
  <data name="SearchName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SearchSource" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="SearchTruncated" xml:space="preserve">
    <value>additional entries truncated due to result limit</value>
  </data>
  <data name="SearchVersion" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="SettingLoadFailure" xml:space="preserve">
    <value>The following failures were found validating the settings:</value>
  </data>
  <data name="SettingsCommandLongDescription" xml:space="preserve">
    <value>Open settings in the default json text editor. If no editor is configured, opens settings in notepad. For available settings see https://aka.ms/winget-settings</value>
  </data>
  <data name="SettingsCommandShortDescription" xml:space="preserve">
    <value>Open settings</value>
  </data>
  <data name="SettingsWarnings" xml:space="preserve">
    <value>Unexpected error while loading settings. Please verify your settings by running the settings command.</value>
  </data>
  <data name="ShowChannel" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="ShowCommandLongDescription" xml:space="preserve">
    <value>Shows information on a specific package. By default, the query must case-insensitively match the id, name, or moniker of the package. Other fields can be used by passing their appropriate option.</value>
  </data>
  <data name="ShowCommandShortDescription" xml:space="preserve">
    <value>Shows info about an package</value>
  </data>
  <data name="ShowVersion" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="SilentArgumentDescription" xml:space="preserve">
    <value>Request silent installation</value>
  </data>
  <data name="SingleCharAfterDashError" xml:space="preserve">
    <value>Only the single character alias can occur after a single -</value>
  </data>
  <data name="SourceAddAlreadyExistsDifferentArg" xml:space="preserve">
    <value>A source with the given name already exists and refers to a different location:</value>
  </data>
  <data name="SourceAddAlreadyExistsDifferentName" xml:space="preserve">
    <value>A source with a different name already refers to this location:</value>
  </data>
  <data name="SourceAddAlreadyExistsMatch" xml:space="preserve">
    <value>A source with the given name already exists and refers to the same location:</value>
  </data>
  <data name="SourceAddBegin" xml:space="preserve">
    <value>Adding source:</value>
  </data>
  <data name="SourceAddCommandLongDescription" xml:space="preserve">
    <value>Add a new source. A source provides the data for you to discover and install packages. Only add a new source if you trust it as a secure location.</value>
  </data>
  <data name="SourceAddCommandShortDescription" xml:space="preserve">
    <value>Add a new source</value>
  </data>
  <data name="SourceArgArgumentDescription" xml:space="preserve">
    <value>Argument given to the source</value>
  </data>
  <data name="SourceArgumentDescription" xml:space="preserve">
    <value>Find package using the specified source</value>
  </data>
  <data name="SourceCommandLongDescription" xml:space="preserve">
    <value>Manage sources with the sub-commands. A source provides the data for you to discover and install packages. Only add a new source if you trust it as a secure location.</value>
  </data>
  <data name="SourceCommandShortDescription" xml:space="preserve">
    <value>Manage sources of packages</value>
  </data>
  <data name="SourceListArg" xml:space="preserve">
    <value>Argument</value>
    <comment>Value given to source.</comment>
  </data>
  <data name="SourceListCommandLongDescription" xml:space="preserve">
    <value>List all current sources, or full details of a specific source.</value>
  </data>
  <data name="SourceListCommandShortDescription" xml:space="preserve">
    <value>List current sources</value>
  </data>
  <data name="SourceListData" xml:space="preserve">
    <value>Data</value>
    <comment>Data stored by the source.</comment>
  </data>
  <data name="SourceListField" xml:space="preserve">
    <value>Field</value>
    <comment>The name of a piece of information about a source.</comment>
  </data>
  <data name="SourceListName" xml:space="preserve">
    <value>Name</value>
    <comment>The name of the source.</comment>
  </data>
  <data name="SourceListNoneFound" xml:space="preserve">
    <value>Did not find a source named:</value>
  </data>
  <data name="SourceListNoSources" xml:space="preserve">
    <value>There are no sources configured.</value>
  </data>
  <data name="SourceListType" xml:space="preserve">
    <value>Type</value>
    <comment>The kind of source.</comment>
  </data>
  <data name="SourceListUpdated" xml:space="preserve">
    <value>Updated</value>
    <comment>The last time the source was updated.</comment>
  </data>
  <data name="SourceListUpdatedNever" xml:space="preserve">
    <value>never</value>
    <comment>The source has never been updated.</comment>
  </data>
  <data name="SourceListValue" xml:space="preserve">
    <value>Value</value>
    <comment>The value of information about a source.</comment>
  </data>
  <data name="SourceNameArgumentDescription" xml:space="preserve">
    <value>Name of the source</value>
  </data>
  <data name="SourceOpenFailedSuggestion" xml:space="preserve">
    <value>Failed to open the source; try the 'source reset' command if the problem persists.</value>
    <comment>{Locked="source reset"}</comment>
  </data>
  <data name="SourceOpenPredefinedFailedSuggestion" xml:space="preserve">
    <value>Failed to open the predefined source; please report to winget maintainers.</value>
    <comment>{Locked="winget"}</comment>
  </data>
  <data name="SourceRemoveAll" xml:space="preserve">
    <value>Removing all sources...</value>
  </data>
  <data name="SourceRemoveCommandLongDescription" xml:space="preserve">
    <value>Remove a specific source.</value>
  </data>
  <data name="SourceRemoveCommandShortDescription" xml:space="preserve">
    <value>Remove current sources</value>
  </data>
  <data name="SourceRemoveOne" xml:space="preserve">
    <value>Removing source:</value>
  </data>
  <data name="SourceResetAll" xml:space="preserve">
    <value>Resetting all sources...</value>
  </data>
  <data name="SourceResetCommandLongDescription" xml:space="preserve">
    <value>This command drops existing sources, potentially leaving any local data behind. Without any argument, it will drop all sources and add the defaults. If a named source is provided, only that source will be dropped.</value>
  </data>
  <data name="SourceResetCommandShortDescription" xml:space="preserve">
    <value>Reset sources</value>
  </data>
  <data name="SourceResetForceArgumentDescription" xml:space="preserve">
    <value>Forces the reset of the sources</value>
  </data>
  <data name="SourceResetListAndOverridePreamble" xml:space="preserve">
    <value>The following sources will be reset if the --force option is given:</value>
    <comment>{Locked="--force"}</comment>
  </data>
  <data name="SourceResetOne" xml:space="preserve">
    <value>Resetting source:</value>
  </data>
  <data name="SourceTypeArgumentDescription" xml:space="preserve">
    <value>Type of the source</value>
  </data>
  <data name="SourceUpdateAll" xml:space="preserve">
    <value>Updating all sources...</value>
  </data>
  <data name="SourceUpdateCommandLongDescription" xml:space="preserve">
    <value>Update all sources, or only a specific source.</value>
  </data>
  <data name="SourceUpdateCommandShortDescription" xml:space="preserve">
    <value>Update current sources</value>
  </data>
  <data name="SourceUpdateOne" xml:space="preserve">
    <value>Updating source:</value>
  </data>
  <data name="TagArgumentDescription" xml:space="preserve">
    <value>Filter results by tag</value>
  </data>
  <data name="ThankYou" xml:space="preserve">
    <value>Thank you for using winget</value>
  </data>
  <data name="ThirdPartSoftwareNotices" xml:space="preserve">
    <value>Third Party Notices</value>
  </data>
  <data name="ToolDescription" xml:space="preserve">
    <value>The winget command line utility enables installing applications and other packages from the command line.</value>
  </data>
  <data name="ToolInfoArgumentDescription" xml:space="preserve">
    <value>Display general info of the tool</value>
  </data>
  <data name="ToolVersionArgumentDescription" xml:space="preserve">
    <value>Display the version of the tool</value>
  </data>
  <data name="TooManyArgError" xml:space="preserve">
    <value>Argument provided more times than allowed</value>
  </data>
  <data name="TooManyBehaviorsError" xml:space="preserve">
    <value>More than one execution behavior argument provided</value>
  </data>
  <data name="UnexpectedErrorExecutingCommand" xml:space="preserve">
    <value>An unexpected error occurred while executing the command:</value>
  </data>
  <data name="UnrecognizedCommand" xml:space="preserve">
    <value>Unrecognized command</value>
  </data>
  <data name="UpdateAllArgumentDescription" xml:space="preserve">
    <value>Update all installed packages to latest if available</value>
  </data>
  <data name="UpdateNotApplicable" xml:space="preserve">
    <value>No applicable update found.</value>
  </data>
  <data name="UpgradeCommandLongDescription" xml:space="preserve">
    <value>Updates the selected package, either found by searching the installed packages list or directly from a manifest. By default, the query must case-insensitively match the id, name, or moniker of the package. Other fields can be used by passing their appropriate option.</value>
    <comment>id, name, and moniker are all named values in our context, and may benefit from not being translated.</comment>
  </data>
  <data name="UpgradeCommandShortDescription" xml:space="preserve">
    <value>Updates the given package</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>usage</value>
    <comment>The way to use the software</comment>
  </data>
  <data name="ValidateCommandLongDescription" xml:space="preserve">
    <value>Validates a manifest using a strict set of guidelines. This is intended to enable you to check your manifest before submitting to a repo.</value>
  </data>
  <data name="ValidateCommandShortDescription" xml:space="preserve">
    <value>Validates a manifest file</value>
  </data>
  <data name="ValidateManifestArgumentDescription" xml:space="preserve">
    <value>The path to the manifest to be validated</value>
  </data>
  <data name="VerboseLogsArgumentDescription" xml:space="preserve">
    <value>Enables verbose logging for WinGet</value>
  </data>
  <data name="VerifyFileSignedMsix" xml:space="preserve">
    <value>Please verify that the input file is a valid, signed MSIX.</value>
  </data>
  <data name="VersionArgumentDescription" xml:space="preserve">
    <value>Use the specified version; default is the latest version</value>
  </data>
  <data name="VersionsArgumentDescription" xml:space="preserve">
    <value>Show available versions of the package</value>
  </data>
  <data name="WordArgumentDescription" xml:space="preserve">
    <value>The value provided before completion is requested</value>
  </data>
  <data name="GetManifestResultVersionNotFound" xml:space="preserve">
    <value>No version found matching:</value>
  </data>
  <data name="OpenSourceFailedNoMatch" xml:space="preserve">
    <value>No sources match the given value:</value>
  </data>
  <data name="OpenSourceFailedNoMatchHelp" xml:space="preserve">
    <value>The configured sources are:</value>
  </data>
  <data name="OpenSourceFailedNoSourceDefined" xml:space="preserve">
    <value>No sources defined; add one with 'source add' or reset to defaults with 'source reset'</value>
    <comment>{Locked="source add","source reset"}</comment>
  </data>
  <data name="ReportIdentityFound" xml:space="preserve">
    <value>Found</value>
  </data>
  <data name="VerifyFileFailedIsDirectory" xml:space="preserve">
    <value>Path is a directory:</value>
  </data>
  <data name="VerifyFileFailedNotExist" xml:space="preserve">
    <value>File does not exist:</value>
  </data>
  <data name="BothManifestAndSearchQueryProvided" xml:space="preserve">
    <value>Both local manifest and search query args are provided</value>
  </data>
  <data name="Logs" xml:space="preserve">
    <value>Logs</value>
    <comment>Diagnostic files containing information about application use.</comment>
  </data>
  <data name="InstallerBlockedByPolicy" xml:space="preserve">
    <value>The installer is blocked by policy</value>
  </data>
  <data name="InstallerFailedSecurityCheck" xml:space="preserve">
    <value>The installer failed security check</value>
  </data>
  <data name="InstallerFailedVirusScan" xml:space="preserve">
    <value>An anti-virus product reports an infection in the installer</value>
  </data>
  <data name="SourceOpenWithFailedUpdate" xml:space="preserve">
    <value>Failed in attempting to update the source:</value>
  </data>
  <data name="UninstallCommandLongDescription" xml:space="preserve">
    <value>Uninstalls the selected package, either found by searching the installed packages list or directly from a manifest. By default, the query must case-insensitively match the id, name, or moniker of the package. Other fields can be used by passing their appropriate option.</value>
  </data>
  <data name="UninstallCommandShortDescription" xml:space="preserve">
    <value>Uninstalls the given package</value>
  </data>
  <data name="UninstallFlowStartingPackageUninstall" xml:space="preserve">
    <value>Starting package uninstall...</value>
  </data>
  <data name="UninstallFlowUninstallSuccess" xml:space="preserve">
    <value>Successfully uninstalled</value>
  </data>
  <data name="NoUninstallInfoFound" xml:space="preserve">
    <value>winget cannot locate the uninstall command for this package. Please reach out to the package publisher for support.</value>
    <comment>{Locked="winget"}</comment>
  </data>
  <data name="UninstallAbandoned" xml:space="preserve">
    <value>Uninstallation abandoned</value>
  </data>
  <data name="UninstallFailedWithCode" xml:space="preserve">
    <value>Uninstall failed with exit code:</value>
  </data>
</root>