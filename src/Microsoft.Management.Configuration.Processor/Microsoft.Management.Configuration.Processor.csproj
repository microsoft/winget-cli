<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <DotNetVersion>net6.0</DotNetVersion>
    <!-- Keep in sync with attributes in AssemblyInfo.cs -->
    <TargetFramework>$(DotNetVersion)-windows10.0.19041.0</TargetFramework>
    <Nullable>enable</Nullable>
    <!-- Keep in sync with attributes in AssemblyInfo.cs -->
    <SupportedOSPlatformVersion>10.0.17763.0</SupportedOSPlatformVersion>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <Platform>AnyCpu</Platform>
    <RuntimeIdentifier>win</RuntimeIdentifier>
    <OutputPath>$(SolutionDir)$(Platform)\$(Configuration)\$(MSBuildProjectName)\</OutputPath>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- Workaround for MSB3271 error on processor architecture mismatch -->
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
    <!-- Disable warning CS1591 for cswinrt auto-generated files and CS8785 for SourceGenerator compilation errors -->
    <NoWarn>1591,8785</NoWarn>
    <Configurations>Debug;Release;ReleaseStatic</Configurations>
    <CsWinRTEnableLogging>true</CsWinRTEnableLogging>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='ReleaseStatic'">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup>
    <CsWinRTComponent>true</CsWinRTComponent>
    <CsWinRTWindowsMetadata>10.0.19041.0</CsWinRTWindowsMetadata>
  </PropertyGroup>

  <ItemGroup>
    <AdditionalFiles Include="..\stylecop.json" Link="stylecop.json" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.0.1" />
    <PackageReference Include="Microsoft.PowerShell.SDK" Version="7.2.8" GeneratePathProperty="true">
      <ExcludeAssets>contentFiles</ExcludeAssets>
    </PackageReference>
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="System.Security.Cryptography.Pkcs" Version="6.0.3" />
    <PackageReference Include="Microsoft.Windows.Compatibility" Version="6.0.6" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.Management.Configuration.Projection\Microsoft.Management.Configuration.Projection.csproj">
      <OutputItemType>Content</OutputItemType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <ReferenceOutputAssembly>True</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>

  <Target Name="MicrosoftManagementConfigurationPathTarget" BeforeTargets="CsWinRTSetAuthoringWinMDs">
    <PropertyGroup>
      <MicrosoftManagementConfigurationPathx64>$(OutputPath)..\..\..\x64\$(Configuration)\Microsoft.Management.Configuration\Microsoft.Management.Configuration.winmd</MicrosoftManagementConfigurationPathx64>
      <MicrosoftManagementConfigurationPathx86>$(OutputPath)..\..\..\x86\$(Configuration)\Microsoft.Management.Configuration\Microsoft.Management.Configuration.winmd</MicrosoftManagementConfigurationPathx86>
      <MicrosoftManagementConfigurationPatharm>$(OutputPath)..\..\..\arm\$(Configuration)\Microsoft.Management.Configuration\Microsoft.Management.Configuration.winmd</MicrosoftManagementConfigurationPatharm>
      <MicrosoftManagementConfigurationPatharm64>$(OutputPath)..\..\..\arm64\$(Configuration)\Microsoft.Management.Configuration\Microsoft.Management.Configuration.winmd</MicrosoftManagementConfigurationPatharm64>
    </PropertyGroup>

    <Message Importance="normal" Condition="Exists('$(MicrosoftManagementConfigurationPathx64)')" Text="$(MicrosoftManagementConfigurationPathx64) exists!" />
    <Message Importance="normal" Condition="Exists('$(MicrosoftManagementConfigurationPathx86)')" Text="$(MicrosoftManagementConfigurationPathx86) exists!" />
    <Message Importance="normal" Condition="Exists('$(MicrosoftManagementConfigurationPatharm)')" Text="$(MicrosoftManagementConfigurationPatharm) exists!" />
    <Message Importance="normal" Condition="Exists('$(MicrosoftManagementConfigurationPatharm64)')" Text="$(MicrosoftManagementConfigurationPatharm64) exists!" />

    <Message Importance="normal" Text="Microsoft.Management.Configuration.winmd -&gt; $(MicrosoftManagementConfigurationPathx64)" />
    <Error Condition="!Exists('$(MicrosoftManagementConfigurationPathx64)')" Text="Microsoft.Management.Configuration.winmd was not found" />
    <ItemGroup Condition="Exists('$(MicrosoftManagementConfigurationPathx64)')">
      <CsWinRTAuthoringWinMDs Include="$(MicrosoftManagementConfigurationPathx64)" />
    </ItemGroup>
  </Target>

  <Target Name="PwshFiles" AfterTargets="AfterBuild" >
    <ItemGroup>
      <RefFiles Include="$(PkgMicrosoft_PowerShell_SDK)\contentFiles\any\any\ref\*.*" />
      <WinModuleFiles Include="$(PkgMicrosoft_PowerShell_SDK)\contentFiles\any\any\runtimes\win\lib\$(DotNetVersion)\Modules\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(RefFiles)" DestinationFolder="$(OutputPath)\ref\" />
    <Copy SourceFiles="@(WinModuleFiles)" DestinationFolder="$(OutputPath)\Modules\%(RecursiveDir)\" />
  </Target>

</Project>