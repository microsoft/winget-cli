<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- Keep in sync with attributes in AssemblyInfo.cs -->
    <TargetFramework>net8.0-windows10.0.22000</TargetFramework>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <Nullable>enable</Nullable>
    <OutputPath>$(SolutionDir)$(Platform)\$(Configuration)\$(MSBuildProjectName)\</OutputPath>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DocumentationFile>$(OutputPath)\$(MSBuildProjectName).xml</DocumentationFile>
    <RuntimeIdentifier>win</RuntimeIdentifier>
    <Configurations>Debug;Release;ReleaseStatic</Configurations>
    <CsWinRTCcwLookupTableGeneratorEnabled>false</CsWinRTCcwLookupTableGeneratorEnabled>
    <!--
    !!! Remove or update this on the next Microsoft.Windows.CsWinRT package version update. !!!
    -->
    <WindowsSdkPackageVersion>10.0.22000.53</WindowsSdkPackageVersion>
    <WinGetCsWinRTEmbedded>true</WinGetCsWinRTEmbedded>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='ReleaseStatic'">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <!-- From the name, ReleaseStatic would be a better fit for embedded. However, we will use embedded at all times except the inproc nuget package release, so it is better if it is in this configuration. -->
    <WinGetCsWinRTEmbedded>false</WinGetCsWinRTEmbedded>
  </PropertyGroup>

  <ItemGroup>
    <AdditionalFiles Include="..\..\stylecop.json" Link="stylecop.json" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\CommonFiles\PowerShellCmdlet.cs" Link="PowerShellCmdlet.cs" />
    <Compile Include="..\CommonFiles\StreamType.cs" Link="StreamType.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="PowerShellStandard.Library" Version="5.1.1" PrivateAssets="all" />
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  
  <!-- This project doesn't reference CSWinRT, but specify this everywhere it will fail with NETSDK1130 and MSB3271. -->
  <PropertyGroup>
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
  </PropertyGroup>

  <ItemGroup Condition="'$(WinGetCsWinRTEmbedded)'!='true'">
    <PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.1.6" />
  </ItemGroup>

  <Import Project="..\..\targets\ReferenceEmbeddedCsWinRTProject.targets" Condition="'$(WinGetCsWinRTEmbedded)'=='true'" />

  <ItemGroup>
    <ProjectReference Include="..\..\Microsoft.Management.Configuration.Processor\Microsoft.Management.Configuration.Processor.csproj" />
    <ProjectReference Include="..\Microsoft.WinGet.SharedLib\Microsoft.WinGet.SharedLib.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <CustomToolNamespace>Microsoft.WinGet.Resources</CustomToolNamespace>
    </EmbeddedResource>
  </ItemGroup>

</Project>
