# Commit triggers
trigger:
- master

# PR triggers
pr:
  branches:
    include:
    - master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'src/AppInstallerCLI.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

- task: CmdLine@2
  inputs:
    script: |
      AppInstallerCLITests.exe -logto AICLI.log -s -r junit -o TEST-AppInstallerCLI-$(_artifact).xml
    workingDirectory: 'src\x64\Release\AppInstallerCLITests\'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'src\x64\Release\AppInstallerCLITests\AICLI.log'
    ArtifactName: 'TestPassLog'
    publishLocation: 'Container'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'src\x64\Release\AppInstallerCLITests\TEST-AppInstallerCLI-$(_artifact).xml'
    ArtifactName: 'TestPassOutput'
    publishLocation: 'Container'
  condition: succeededOrFailed()

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TEST-*.xml'
    failTaskOnFailedTests: true
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'src\x64\Release\AppInstallerCLI\AppInstallerCLI.exe'
    ArtifactName: 'AppInstallerCLI.exe'
    publishLocation: 'Container'

- task: ComponentGovernanceComponentDetection@0
  inputs:
    scanType: 'Register'
    verbosity: 'Verbose'
    alertWarningLevel: 'High'