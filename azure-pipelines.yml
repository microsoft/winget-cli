trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: 'GetReleaseTag'
  condition: not(eq(variables['Build.Reason'], 'PullRequest'))
  variables:
    runCodesignValidationInjection: ${{ false }}
    skipComponentGovernanceDetection: ${{ true }}
  steps:
  - task: PowerShell@2
    name: 'GetTag'
    displayName: Get Release Tag
    inputs:
      filePath: 'src\binver\Update-BinVer.ps1'
      arguments: '-OutVar'
      workingDirectory: 'src'

# Build job creates artifacts for use in test jobs
- job: 'Build'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'BuildOutput'
      publishLocation: 'pipeline'

- job: 'Build'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: sudo apt-get update
    displayName: 'Update package lists'

  - script: sudo apt-get install -y build-essential cmake
    displayName: 'Install build tools'

  - script: mkdir build
    displayName: 'Create build directory'

  - script: cd build && cmake ..
    displayName: 'Configure CMake'

  - script: cd build && make
    displayName: 'Build project'

  - script: cd build && ctest
    displayName: 'Run tests'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'BuildOutput'
      publishLocation: 'pipeline'
    displayName: 'Publish Build Artifacts'
